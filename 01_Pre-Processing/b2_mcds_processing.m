clearvars -except subset;
close all;
rng(1);

% Make sure gurobi is setup
path_to_gurobi = "~/AUR/gurobi911";
%path_to_gurobi = "C:\Users\USER\Documents\gurobi911";
os = "linux64";
%os = "win64";

% Replace intlinprog solver with path to gurobi installation
addpath(fullfile(path_to_gurobi, os, 'examples', 'matlab'));
current_dir = pwd;
gurobi_setup_dir = strcat(path_to_gurobi,"/",os,"/matlab");
cd(gurobi_setup_dir)
run("gurobi_setup.m");
cd(current_dir)

        
%% MCDS Processing 2
% This scripts uses the output of b1_mcds_processing for the optimization
% approach and solves the pre-defined and saved problem definitions. This
% split is necessary, because the mcds problems can become quite large and
% MATLAB is not able to clear/clean fragmented memory. As such it is
% adviesed to process files to problems using script b1 and then solve the
% problems using script b2

%% Configuration
disp("### Configuration MCDS LP Solver: ...")

pp_linux = "/simresults/sim/leonard/sg-flooding/";
pp_win = "C:\Users\comnets\Documents\Leonard\";
path_prefix = pp_linux;

% Path to save_node information generated by osm_processing
path_to_input = strcat(path_prefix, "XX_output_lp_problems");

% Process only subset of all generated problem
if(~exist('subset','var'))
    subset = [31];
end

% Path to export feeder info structs
path_export_feeder_info = strcat(path_prefix, "XX_output_mcds");

% Create export path
mkdir(path_export_feeder_info)

disp("### Configuration MCDS LP Solver: Done!")

%% Calculation
for osmDataID = 1:length(subset)    
    % Load Data
    disp(strcat("### Loading LP problem for feeder ID: ",num2str(subset(osmDataID)), ": ..."));
    load(strcat(path_to_input,"/mcds",num2str(subset(osmDataID)),".mat"))
    disp(strcat("### Loading LP problem for feeder ID: ",num2str(subset(osmDataID)), ": Done!"));

    % Find MCDS
    disp("### Solving MCDS Problem: ...");
    [sol,~] = solve(problem.mcdsProblem);
    mcds_graph = subgraph(problem.G,sol.X==1);
    disp("### Solving MCDS Problem: Done!");
    
    % Plot Results
    disp("### Drawing result figure: ...");
    H = plot_mcds_results(problem.G,mcds_graph);
    drawnow();
    disp("### Drawing result figure: Done!");
    
    % Save Results
    disp("### Saving full and MCDS graph: ...");
    save_mcds_info(problem.G, mcds_graph, path_export_feeder_info,subset(osmDataID),problem.comRange);
    % Save Workspace
    save(strcat(path_export_feeder_info,"/mcdsWS",num2str(subset(osmDataID)),".mat"))
    disp("### Saving full and MCDS graph: Done!");
end
